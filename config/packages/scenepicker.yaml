##############################################################################
## OBJECTIVE
##############################################################################
## The objective of this package is to create a scene picker in frontend.
## If user picks a scene, that scene should be performed.
##
## Please note: If you use other automations to perform scenes, they should also go through the scene picker.
## By doing so, frontend always shows the correct scene.
##
## Example automation using device presence and sun state to perform a scene:
#### trigger:
####  platform: state
####  entity_id: group.all_devices
####  to: 'home'
####
#### condition:
####  condition: and
####  conditions:
####    - condition: state
####      entity_id: sun.sun
####      state: 'below_horizon'
####
#### action:
####  - service: input_select.select_option
####    data:
####      entity_id: input_select.scenepicker
####      option: "Hemma"
##
## I prefer using script: rather than scene: since it is more versatile.
## Whenever I refer to scenes, that means I refer to a script that calls services such as
## light.turn_on or switch_turn.on

##############################################################################
## INPUT SELECT
##############################################################################
# Define dropdown list to pick scenes from
input_select:
  scenepicker:
    name: "Scen"
    icon: mdi:weather-sunset
    options:
      - "--Välj--"
      - "Morgon"
      - "Borta"
      - "Hemma"
      - "TV"
      - "Läggdags"
      - "Sova"

##############################################################################
## AUTOMATIONS
##############################################################################
# Perform actions based on which scene is picked.
automation:
  alias: "Kör scen"
  hide_entity: true

  trigger:
    platform: state
    entity_id: input_select.scenepicker

  action:
    - service: script.turn_on
      data_template:
        entity_id: >
          {% if is_state("input_select.scenepicker", "Morgon") %}
            script.morning
          {%-elif is_state("input_select.scenepicker", "Borta") %}
            script.leavinghome
          {%-elif is_state("input_select.scenepicker", "Hemma") %}
            script.evening
          {%-elif is_state("input_select.scenepicker", "TV") %}
            script.movietime
          {%-elif is_state("input_select.scenepicker", "Läggdags") %}
            script.bedtime
          {%-elif is_state("input_select.scenepicker", "Sova") %}
            script.night
          {% else %}
            none
          {% endif %}

##############################################################################
## GROUPS
##############################################################################
group:
  scenepicker:
    name: "Välj scen"
    entities:
      - input_select.scenepicker
